{
    "collab_server" : "",
    "contents" : "CoorGateP = function(X, wk, tau, Gamma, rho)\n{\nsource(\"Fs.R\")\nsource(\"CoorLQk.R\")\nsource(\"Pik.R\")\n#n = dim(X)[1]\nP_k = c(rep(0,n))\nd_k = c(rep(0,n))\nc_k = c(rep(0,n))\nStepsize = 0.5\nesp = 10^-5 #threshold for Q value\nwk_new = wk\nrepeat\n{\n  wk_old = wk_new\n  Q_old = Fs(X, tau, Gamma, rho, wk_old)\n  for(k in 1:(K-1))\n  { #First: compute the quadratic approximation w.r.t (w_k): L_Qk\n    P = Pik(n, K, X, wk_new) #value of Pi_k\n    P_k = P[,k]\n    d_k = P_k*(1-P_k)\n    c_k = X%*%(as.matrix(wk_new[k,]))+(tau[,k]-P_k)/d_k\n    #adjust c_k: change wk --> wk_new to update parameters at local point\n    #Second: coordinate descent for maximizing L_Qk\n    wk_new[k,] = CoorLQk(X, c_k, d_k, wk_new[k,], Gamma[k], rho)\n  }\n  Q_new = Fs(X, tau, Gamma, rho, wk_new)\n  #-------------BACKTRACKING LINE SEARCH\n  t = 1\n  while (Q_new < Q_old)\n  {\n    t = t*Stepsize\n    wk_new = wk_new*t + wk_old*(1-t)\n    Q_new = Fs(X, tau, Gamma, rho, wk_new)\n  }\n  if((Q_new - Q_old) < esp) break\n}\nreturn(wk_new)\n}\n",
    "created" : 1565001311480.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "934038967",
    "id" : "936FDB12",
    "lastKnownWriteTime" : 1552911665,
    "last_content_update" : 1552911665,
    "path" : "~/data/data-Research/my-codes/My-Open-Access-Codes/prEMME/RMoE/R/CoorGateP.R",
    "project_path" : "R/CoorGateP.R",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}